#include<stdio.h>
#include<time.h>


int find_binary(int a[], int n, int key) {// 오름차순 정렬된 데이터에 대해 이분검색
	int low = 0; 
	int high = n - 1;
	int mid;
	int cnt = 0; 
	while (low <= high) {
		cnt++;
		mid = (low + high) / 2; 
		if (a[mid] < key)
			low = mid + 1;
		else if (a[mid] == key)
		{
			printf("loop_count in find_binary function = %d\n", cnt);
			return mid;
		}
		else
			high = mid - 1; 
	}
	return -1; 
} 


int find_linear(int a[], int n, int key) { // 순차적으로 찾기
	int i = 0;
	int cnt = 0;
	for (i = 0; i < n; i++) {
		cnt++;
		if (a[i] == key) {
			printf("loop_count in find_linear function = %d\n", cnt);
			return i;
		}
	}
	return -1;
}

int main() {
	int find_num = 499999990;
	int index1 = 0, index2 = 0;
	int ary[500000000];
	
	clock_t start0, finish0, start1, start2, finish1, finish2;
	printf("array_size = %d\n", sizeof(ary) / sizeof(int));
	printf("find_num = %d\n", find_num);

	start0 = clock();
	int cnt = 0;
	for (int i = 0; i < 500000000; i++) {
		ary[i] = i;
	}
	finish0 = clock();
	int diff0 = finish0 - start0;
	printf("array making time = %d ms\n\n", diff0);
	// make array

	start1 = clock();
	index1 = find_linear(ary, 500000000, find_num);
	printf("linear searching: index(if None: -1) = %d\n\n", index1);
	finish1 = clock(); // linear searching

	start2 = clock();
	index2 = find_binary(ary, 500000000, find_num);
	printf("binary searching: index(if None: -1) = %d\n\n", index2);
	finish2 = clock();//binary searching

	int diff1 = finish1 - start1;
	int diff2 = finish2 - start2;
	printf("linear searching time: %d ms\n", diff1);
	printf("binary searching time: %d ms\n", diff2);

	return 0;

}
